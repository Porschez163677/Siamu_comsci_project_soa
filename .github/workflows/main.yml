name: E-commerce CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: 1111
          MYSQL_DATABASE: ecom_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Restore MySQL schema
      run: |
        sudo apt-get update && sudo apt-get install -y mysql-client
        mysql -h127.0.0.1 -uroot -p1111 ecom_db < schema.sql

    - name: Run tests
      env:
        DB_HOST: 127.0.0.1
        DB_USER: root
        DB_PASSWORD: 1111
        DB_NAME: ecom_db
      run: pytest

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/project_ecom .

    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/project_ecom

    - name: Deploy to DigitalOcean Droplet
      run: |
        ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
          docker pull ${{ secrets.DOCKER_USERNAME }}/project_ecom
          docker stop app || true
          docker rm app || true
          docker run -d -p 80:8000 --name app ${{ secrets.DOCKER_USERNAME }}/project_ecom
        EOF
